.ios, .md {
 
    page-home {
 
        .scroll-content {
            background-color: map-get($colors, light);
        }
 
        ion-card-header {
            font-weight: bold;
        }
        .button {
            background: gray;
        }
        .button.active {
          background: map-get($colors, primary);
          color: white;
        }
        .grid-container {
          display: grid;
          grid-template-columns: 1fr 30% 20%;
          grid-gap: 10px;
          grid-auto-rows: auto;
          grid-gap: 10px;
          padding: 10px;
        }
        .grid-container > div {
          text-align: left;
          padding: 20px 0;
          font-size: 30px;
        }
        .grid1item1 {
          grid-row: 1/1;
          grid-column: 1/1; 
        }
        .grid1item2 {
          grid-row: 2/2;
          grid-column: 1/1;
        }
        .grid1item3 {
          grid-row: 3/3;
          grid-column: 1/1;
        }
        .grid1item4 {
          grid-row: 3/3;
          grid-column: 2/2;
        }
        .grid1item5 {
          grid-row: 1/1;
          grid-column: 3/3;
        }
        .grid1item6 {
          grid-row: 3/3;
          grid-column: 3/3;
        }
        .grid-container2 {
          display: grid;
          grid-template-columns: 1fr 0.2fr 1fr 0.2fr 1fr;
          grid-template-rows: repeat(1, 1fr);
          grid-gap: 10px;
          padding: 10px;
        }
        .grid-container2 > div {
          font-size: 30px;
          display: grid; /* added */
          align-items: center; /* added */
        }
        .grid-container2 > div > button {
          color: black;
          background: white;
          font: inherit;
        }
        .grid2item1 {
          grid-row: 1/1;
          grid-column: 1/1; 
        }
        .grid2item2 {
          grid-row: 1/1;
          grid-column: 2/2;
        }
        .grid2item3 {
          grid-row: 1/1;
          grid-column: 3/3;
        }
        .grid2item4 {
          grid-row: 1/1;
          grid-column: 4/4;
        }
        .grid2item5 {
          grid-row: 1/1;
          grid-column: 5/5;
        }
        .grid2item6-progress {
          grid-row: 2/2;
          grid-column: 1/6;
        }

        //Progress Bar
        #progressbar {
            background-color: black;
            border-radius: 13px; /* (height of inner div) / 2 + padding */
            padding: 3px;
        }
          
        #progressbar > div {
           background-color: map-get($colors, primary);
           width: 15%; /* Adjust with JavaScript */
           height: 20px;
           border-radius: 10px;
        }


//box-shadow: [inset?] [top] [left] [blur] [size] [color];
        // ******************************Button Animations***************************************
        // Size can also be negative; see how it's smaller than the element
        .raise:hover,
        .raise:focus {
          box-shadow: 5px 5px 25px -10px var(--hover);
          transform: translateY(-0.04em);
          background: map-get($colors, light-blue);
        }
        $colors: (
          raise: black, 
        );

        // Sass variables compile to a static string; CSS variables are dynamic and inherited
          // Loop through the map and set CSS custom properties using Sass variables
        @each $button, $color in $colors {
          .#{$button} {
            --color: #{$color};
            --hover: #{adjust-hue($color, 45deg)};
          }
        }

        // Now every button will have different colors as set above. We get to use the same structure, only changing the custom properties.
        button {  
          color: var(--color);
          transition: 0.25s;
          
          &:hover,
          &:focus { 
            color: #fff;
          }
        }
    }
}